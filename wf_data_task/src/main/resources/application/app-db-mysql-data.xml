<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<bean id="dataWriteDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.data.write.url}" />
		<property name="username" value="${jdbc.data.write.username}" />
		<property name="password" value="${jdbc.data.write.password}" />
		<property name="initialSize" value="3" />
		<property name="minIdle" value="3" />
		<property name="maxActive" value="500" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="select 'x' from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="filters" value="stat" />
	</bean>
	<bean id="dataReadDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.data.read.url}" />
		<property name="username" value="${jdbc.data.read.username}" />
		<property name="password" value="${jdbc.data.read.password}" />
		<property name="initialSize" value="3" />
		<property name="minIdle" value="3" />
		<property name="maxActive" value="500" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="select 'x' from dual" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="filters" value="stat" />
	</bean>

	<bean id="dataMultipleDataSource" class="com.wf.core.db.MultipleDataSource">
		<!-- 默认数据库是写的数据库 -->
		<property name="defaultTargetDataSource" ref="dataWriteDataSource" />
		<property name="targetDataSources">
			<map>
				<entry value-ref="dataWriteDataSource" key="dataSourceWrite" />
				<entry value-ref="dataReadDataSource" key="dataSourceRead" />
			</map>
		</property>
	</bean>


	<bean id="dataSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataMultipleDataSource" />
		<property name="typeAliasesPackage" value="com.wf.data.dao.entity.mysql" />
		<property name="typeAliasesSuperType" value="com.wf.core.persistence.BaseEntity" />
		<property name="mapperLocations" value="classpath*:mappings/mysql/**/*.xml" />
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	</bean>
	<bean id="mapperScannerConfigurer-mysql" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="dataSqlSessionFactory" />
		<property name="basePackage" value="com.wf.data.dao.mysql" />
		<property name="annotationClass" value="com.wf.core.persistence.MyBatisDao" />
	</bean>

	<bean id="dataTractionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataMultipleDataSource" />
	</bean>
</beans>
